---
objects:
  -
    type: activity_stream_rule
    ref: act_groupjoin
    data:
      event_type: tiki.user.groupjoin
      rule_type: advanced
      rule: |
        (if (equals args.is_organic 1) (event-trigger syn.organicgrp.groupjoin (map
        (user args.object)
        (type args.type)
        (object args.object)
        (groupname args.group)
        (organicgroupname args.addongroup)
        (organicgroupid args.addongroupid)
        (private args.is_private)
        (organic args.is_organic)
        (aggregate (hash args.type args.object args.group))
        (feed (str syn_organicgrp))
        )))
      notes: User joins group
  -
    type: activity_stream_rule
    ref: act_groupjoin_rec
    data:
      event_type: syn.organicgrp.groupjoin
      rule_type: record
      rule: (event-record event args)
      notes:
  -
    type: activity_stream_rule
    ref: act_groupleave
    data:
      event_type: tiki.user.groupleave
      rule_type: advanced
      rule: |
        (if (equals args.is_organic 1) (event-trigger syn.organicgrp.groupleave (map
        (user args.object)
        (type args.type)
        (object args.object)
        (groupname args.group)
        (organicgroupname args.addongroup)
        (organicgroupid args.addongroupid)
        (private args.is_private)
        (organic args.is_organic)
        (aggregate (hash args.type args.object args.group))
        (feed (str syn_organicgrp))
        )))
      notes: User leaves group
  -
    type: activity_stream_rule
    ref: act_groupleave_rec
    data:
      event_type: syn.organicgrp.groupleave
      rule_type: record
      rule: (event-record event args)
      notes:
  -
    type: activity_stream_rule
    ref: act_forumpost
    data:
      event_type: tiki.forumpost.create
      rule_type: advanced
      rule: |
        (if (equals 1 1) (event-trigger syn.organicgrp.forumpost (map
        (user args.user)
        (type args.type)
        (object args.object)
        (forum_id args.forum_id)
        (title args.title)
        (aggregate (hash args.type args.object))
        (content args.content)
        (feed (str syn_organicgrp))
        )))
      notes: Forum post created
  -
    type: activity_stream_rule
    ref: act_forumpost_rec
    data:
      event_type: syn.organicgrp.forumpost
      rule_type: record
      rule: (event-record event args)
      notes:
  -
    type: activity_stream_rule
    ref: act_forumreply
    data:
      event_type: tiki.forumpost.reply
      rule_type: advanced
      rule: |
        (if (equals 1 1) (event-trigger syn.organicgrp.forumreply (map
        (user args.user)
        (type args.type)
        (object args.object)
        (forum_id args.forum_id)
        (title args.title)
        (topictitle args.parent_title)
        (parent_id args.parent_id)
        (aggregate (hash args.type args.parent_id))
        (aggregateself (hash args.type args.object))
        (content args.content)
        (feed (str syn_organicgrp))
        )))
      notes: Forum post reply
  -
    type: activity_stream_rule
    ref: act_forumreply_rec
    data:
      event_type: syn.organicgrp.forumreply
      rule_type: record
      rule: (event-record event args)
      notes:
  -
    type: activity_stream_rule
    ref: act_whiteboardupdate
    data:
      event_type: tiki.wiki.update
      rule_type: advanced
      rule: |
        (if (and (equals (substring args.namespace 0 15) (str syn_organicgrp_)) (contains args.object whiteboard)) (event-trigger syn.organicgrp.whiteboardupdate (map
        (user args.user)
        (type args.type)
        (object args.object)
        (namespace args.namespace)
        (aggregate (hash args.type args.object))
        (feed (str syn_organicgrp))
        )))
      notes: Whiteboard updated in group namespace
  -
    type: activity_stream_rule
    ref: act_whiteboardupdate_rec
    data:
      event_type: syn.organicgrp.whiteboardupdate
      rule_type: record
      rule: (event-record event args)
      notes:
  -
    type: activity_stream_rule
    ref: act_groupcreate
    data:
      event_type: tiki.trackeritem.create
      rule_type: advanced
      rule: |
        (if (and (equals args.values.status (str o)) (equals args.trackerId 1)) (event-trigger syn.organicgrp.groupcreate (map
        (user args.user)
        (type args.type)
        (object args.object)
        (aggregate (hash args.type args.object))
        (feed (str main stats))
        )))
      notes: Public group is created
  -
    type: activity_stream_rule
    ref: act_groupcreate_rec
    data:
      event_type: syn.organicgrp.groupcreate
      rule_type: record
      rule: (event-record event args)
      notes: